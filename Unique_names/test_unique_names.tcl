#!/usr/bin/tclsh

# Source both scripts
source main.tcl
source uniqueName.tcl

puts "====================================================="
puts "COMPARING new_name AND uniqueName IMPLEMENTATIONS"
puts "====================================================="

# Test case 1: Simple base name without suffix
puts "\n=== Test 1: Simple base name without suffix ==="
set name1_newname [new_name "widget"]
set name1_uniquename [uniqueName "widget"]
puts "new_name result:    $name1_newname"
puts "uniqueName result:  $name1_uniquename"

# Test case 2: Base name with suffix
puts "\n=== Test 2: Base name with suffix ==="
set name2_newname [new_name "widget" "button"]
set name2_uniquename [uniqueName "widget" "button"]
puts "new_name result:    $name2_newname"
puts "uniqueName result:  $name2_uniquename"

# Test case 3: Passing output of one function to the other
puts "\n=== Test 3: Passing output between functions ==="
set name3a_newname [new_name "component"]
set name3b_uniquename [uniqueName $name3a_newname]
puts "First generated by new_name:            $name3a_newname"
puts "Then passed to uniqueName:              $name3b_uniquename"

set name3c_uniquename [uniqueName "element"]
set name3d_newname [new_name $name3c_uniquename]
puts "First generated by uniqueName:          $name3c_uniquename"
puts "Then passed to new_name:                $name3d_newname"

# Test case 4: Alternating function calls with same base name
puts "\n=== Test 4: Alternating function calls with same base name ==="
puts "Starting with 'module' as base name"
puts "new_name:     [set name4a [new_name "module"]]"
puts "uniqueName:   [set name4b [uniqueName "module"]]"
puts "new_name:     [set name4c [new_name "module"]]"
puts "uniqueName:   [set name4d [uniqueName "module"]]"

# Test case 5: Chained pattern reuse
puts "\n=== Test 5: Chained pattern reuse ==="
set name5a [new_name "object"]
set name5b [uniqueName $name5a]
set name5c [new_name $name5b]
set name5d [uniqueName $name5c]
puts "Starting with 'object' as base name"
puts "1. new_name result:    $name5a"
puts "2. uniqueName result:  $name5b"
puts "3. new_name result:    $name5c"
puts "4. uniqueName result:  $name5d"

# Test case 6: Counter behavior
puts "\n=== Test 6: Counter behavior ==="
puts "new_name on n99_class:       [new_name "n99_class"]"
puts "uniqueName on n99_class:     [uniqueName "n99_class"]"
puts "uniqueName on n99_class:     [uniqueName "n99_class"]"
puts "new_name on n99_class:       [new_name "n99_class"]"

# Test case 7: Suffix handling consistency
puts "\n=== Test 7: Suffix handling consistency ==="
set name7a [new_name "form" "input"]
set name7b [uniqueName $name7a]
puts "new_name with suffix:     $name7a"
puts "uniqueName on result:     $name7b"

# Test case 8: Global counter effect in uniqueName
puts "\n=== Test 8: Global counter effect in uniqueName ==="
puts "uniqueName result:  [uniqueName "button"]"
puts "uniqueName result:  [uniqueName "slider"]"
puts "uniqueName result:  [uniqueName "panel"]"
puts "uniqueName result:  [uniqueName "button"]"
